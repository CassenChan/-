class Node(object):
    def __init__(self, item):
        self.elem = item
        self.next = None

class SingleLinkList(object):
    def __init__(self,node=None):
        self._head = node

    def travel(self):
        ptr = self._head
        while(ptr!=None):
            print(ptr.elem)
            ptr = ptr.next

    def append(self, item):
        node = Node(item)
        if self._head == None:
            self._head = node
        else:
            ptr = self._head
            while (ptr.next != None):
                ptr = ptr.next
            ptr.next = node

    def add(self, item):
        node = Node(item)
        if self._head == None:
            self._head = node
        else:
            node.next = self._head
            self._head = node

    def delete(self, item):
        if self._head.elem == item:
            self._head = self._head.next
        ptr = self._head
        while (ptr != None):
            if not ptr.elem == item:
                pre = ptr
                ptr = ptr.next
            else:
                pre.next = ptr.next
                break

    def insert(self, pos, item):
        if pos==0:
            self.add(item)
        else:
            node = Node(item)
            ptr = self._head
            for i in range(pos):
                pre = ptr
                ptr = ptr.next
            node.next = ptr
            pre.next = node
if __name__=="__main__":
    sl = SingleLinkList()
    sl.append(1)
    sl.append(2)
    sl.append(3)
    sl.append(4)
    sl.append(5)
    sl.append(6)
    sl.insert(6, 10)
    sl.travel()
